import { chromium } from '@playwright/test';

async function testFinalLikes() {
  const browser = await chromium.launch({ 
    headless: false,
    args: ['--window-size=400,800']
  });
  const page = await browser.newPage({ viewport: { width: 400, height: 800 } });
  
  console.log('‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ª–∞–π–∫–æ–≤\n');
  
  // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  page.on('console', msg => {
    const text = msg.text();
    if (text.includes('[LikedParagraphs]')) {
      console.log(text);
    }
  });
  
  await page.goto('http://localhost:5173');
  await page.waitForTimeout(2000);
  
  // –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–æ—á–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ)
  await page.evaluate(() => {
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    for (let i = localStorage.length - 1; i >= 0; i--) {
      const key = localStorage.key(i);
      if (key && key.includes('frankl_user_')) {
        localStorage.removeItem(key);
      }
    }
  });
  
  await page.reload();
  await page.waitForTimeout(1000);
  
  await page.click('button:has-text("–ù–∞—á–∞—Ç—å")');
  await page.waitForTimeout(1000);
  await page.locator('button').filter({ hasText: '—á—Ç–µ–Ω–∏–µ' }).click();
  await page.waitForTimeout(2000);
  
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞\n');
  
  // –õ–∞–π–∫–∞–µ–º 3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
  const likedData = [];
  
  console.log('‚ù§Ô∏è –î–æ–±–∞–≤–ª—è–µ–º –ª–∞–π–∫–∏:\n');
  
  for (let i = 0; i < 3; i++) {
    // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç
    const fragmentNum = await page.locator('text=/–§—Ä–∞–≥–º–µ–Ω—Ç \\d+/').textContent();
    const text = await page.locator('.text-content').textContent();
    const shortText = text.substring(0, 40) + '...';
    
    console.log(`${i + 1}. ${fragmentNum}`);
    console.log(`   –¢–µ–∫—Å—Ç: "${shortText}"`);
    
    // –°—Ç–∞–≤–∏–º –ª–∞–π–∫
    await page.locator('button').filter({ has: page.locator('svg[width="24"]') }).click();
    await page.waitForTimeout(500);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω
    const hasHeart = await page.locator('svg[fill="currentColor"]').count() > 0;
    console.log(`   ‚úÖ –õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω: ${hasHeart}\n`);
    
    likedData.push({ num: fragmentNum, text: shortText });
    
    // –ò–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
    if (i < 2) {
      await page.keyboard.press('ArrowUp');
      await page.waitForTimeout(1000);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç—á–∏–∫
  const badge = await page.locator('.absolute.-top-1.-right-1').textContent().catch(() => '0');
  console.log(`üìä –°—á–µ—Ç—á–∏–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ${badge}\n`);
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  console.log('‚≠ê –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...\n');
  await page.locator('button').filter({ has: page.locator('svg[width="20"]') }).first().click();
  await page.waitForTimeout(1500);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  const favCount = await page.locator('.space-y-4 > div').count();
  console.log(`üìö –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º ${favCount} —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n`);
  
  // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç—ã
  if (favCount > 0) {
    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–∫—Å—Ç–æ–≤:');
    for (let i = 0; i < Math.min(favCount, 3); i++) {
      const favText = await page.locator('.space-y-4 > div').nth(i).locator('.font-serif').textContent();
      const shortFavText = favText.substring(0, 40) + '...';
      
      // –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –ª–∞–π–∫–Ω—É—Ç—ã—Ö
      const match = likedData.find(item => item.text === shortFavText);
      if (match) {
        console.log(`‚úÖ ${i + 1}. –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è ${match.num}`);
      } else {
        console.log(`‚ùå ${i + 1}. –ù–µ –Ω–∞–π–¥–µ–Ω–æ: "${shortFavText}"`);
      }
    }
  }
  
  // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
  await page.screenshot({ path: 'test-final-favorites.png' });
  console.log('\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: test-final-favorites.png');
  
  // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  console.log('\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢:');
  if (favCount === 3) {
    console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ!');
  } else {
    console.log(`‚ùå –û—à–∏–±–∫–∞: –æ–∂–∏–¥–∞–ª–æ—Å—å 3, –ø–æ–ª—É—á–µ–Ω–æ ${favCount}`);
  }
  
  await page.waitForTimeout(3000);
  await browser.close();
}

testFinalLikes().catch(console.error);