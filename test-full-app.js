import { chromium } from '@playwright/test';

async function testFullApp() {
  const browser = await chromium.launch({ headless: false });
  const page = await browser.newPage();
  
  console.log('üöÄ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –§—Ä–∞–Ω–∫–ª\n');
  
  // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–æ–≥ –∫–æ–Ω—Å–æ–ª–∏
  page.on('console', msg => {
    const text = msg.text();
    if (text.includes('Fragment') || text.includes('likes')) {
      console.log(`[LOG] ${text}`);
    }
  });
  
  await page.goto('http://localhost:5173');
  await page.waitForTimeout(2000);
  
  // 1. –ù–ê–ß–ê–õ–û –ß–¢–ï–ù–ò–Ø
  console.log('üì± –®–∞–≥ 1: –ù–∞—á–∞–ª–æ —á—Ç–µ–Ω–∏—è');
  await page.locator('button:has-text("–ù–∞—á–∞—Ç—å")').click();
  await page.waitForTimeout(1000);
  
  const key = await page.locator('div.font-mono.text-2xl').textContent();
  console.log('‚úÖ –ö–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:', key);
  
  await page.locator('button:has-text("–ù–∞—á–∞—Ç—å —á—Ç–µ–Ω–∏–µ")').click();
  await page.waitForTimeout(2000);
  
  // 2. –ü–†–û–í–ï–†–Ø–ï–ú –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –¢–ï–ö–°–¢–ê
  console.log('\nüìñ –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Ç–∞–ª–∫–∏');
  const hasText = await page.locator('.text-content').isVisible();
  if (hasText) {
    const text = await page.locator('.text-content').textContent();
    console.log('‚úÖ –¢–µ–∫—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è:', text.substring(0, 60) + '...');
  }
  
  // 3. –¢–ï–°–¢–ò–†–£–ï–ú –õ–ê–ô–ö–ò
  console.log('\n‚ù§Ô∏è –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∞–π–∫–æ–≤');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–∞–π–∫–æ–≤
  for (let i = 0; i < 3; i++) {
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ
    const fragmentInfo = await page.locator('text=/–§—Ä–∞–≥–º–µ–Ω—Ç \\d+ –∏–∑/').textContent();
    
    // –ö–ª–∏–∫–∞–µ–º –ª–∞–π–∫
    await page.locator('button svg[width="24"]').click();
    await page.waitForTimeout(500);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç—á–∏–∫
    const count = await page.locator('button span.text-sm').textContent().catch(() => '1');
    console.log(`   ${fragmentInfo} - ${count} –ª–∞–π–∫–æ–≤`);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
    if (i < 2) {
      await page.keyboard.press('ArrowUp');
      await page.waitForTimeout(1000);
    }
  }
  
  // 4. –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –†–ï–ñ–ò–ú–û–í
  console.log('\nüîÑ –®–∞–≥ 4: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª/–∞–Ω–∞–ª–æ–≥–∏—è');
  await page.keyboard.press(' ');
  await page.waitForTimeout(1000);
  
  const mode = await page.locator('.text-xs.text-text-secondary').last().textContent();
  console.log('‚úÖ –†–µ–∂–∏–º:', mode);
  
  // 5. –ü–†–û–í–ï–†–Ø–ï–ú –ò–ó–ë–†–ê–ù–ù–û–ï
  console.log('\n‚≠ê –®–∞–≥ 5: –ò–∑–±—Ä–∞–Ω–Ω–æ–µ');
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  await page.locator('button svg[width="20"][height="20"]').first().click();
  await page.waitForTimeout(1000);
  
  const favCount = await page.locator('.space-y-4 > div').count();
  console.log(`‚úÖ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º ${favCount} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  const closeButton = await page.locator('button svg path[d*="M15 5L5 15"]').first();
  if (await closeButton.isVisible()) {
    await closeButton.click();
    await page.waitForTimeout(500);
  }
  
  // 6. –ù–ê–í–ò–ì–ê–¶–ò–Ø
  console.log('\nüéØ –®–∞–≥ 6: –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º');
  
  // –°–≤–∞–π–ø—ã –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑
  for (let i = 0; i < 3; i++) {
    await page.keyboard.press('ArrowDown');
    await page.waitForTimeout(500);
  }
  
  const position = await page.locator('text=/–§—Ä–∞–≥–º–µ–Ω—Ç \\d+ –∏–∑/').textContent();
  console.log('‚úÖ –¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–æ—Å–ª–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', position);
  
  // 7. –ì–õ–û–ë–ê–õ–¨–ù–´–ï –õ–ê–ô–ö–ò
  console.log('\nüåç –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∞–π–∫–æ–≤');
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º —Å —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ª–∞–π–∫–∞–º–∏
  for (let i = 0; i < 10; i++) {
    await page.keyboard.press('ArrowUp');
    await page.waitForTimeout(300);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—á–µ—Ç—á–∏–∫
    const hasCounter = await page.locator('button span.text-sm').isVisible();
    if (hasCounter) {
      const count = await page.locator('button span.text-sm').textContent();
      const fragment = await page.locator('text=/–§—Ä–∞–≥–º–µ–Ω—Ç \\d+/').textContent();
      console.log(`   ${fragment}: ${count} –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∞–π–∫–æ–≤`);
    }
  }
  
  // 8. –°–û–•–†–ê–ù–ï–ù–ò–ï –ü–†–û–ì–†–ï–°–°–ê
  console.log('\nüíæ –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
  const beforeReload = await page.locator('text=/–§—Ä–∞–≥–º–µ–Ω—Ç \\d+ –∏–∑/').textContent();
  
  await page.reload();
  await page.waitForTimeout(2000);
  
  const afterReload = await page.locator('text=/–§—Ä–∞–≥–º–µ–Ω—Ç \\d+ –∏–∑/').textContent();
  console.log(`‚úÖ –ü–æ–∑–∏—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${beforeReload} ‚Üí ${afterReload}`);
  
  // –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
  console.log('\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  const stats = await page.evaluate(() => {
    const userKey = localStorage.getItem('frankl_user_key');
    const progressKey = `frankl_user_progress_${userKey}`;
    const progress = JSON.parse(localStorage.getItem(progressKey) || '{}');
    const globalLikes = JSON.parse(localStorage.getItem('frankl_global_likes_v2') || '{}');
    
    return {
      userKey,
      totalRead: progress.totalRead || 0,
      currentIndex: progress.currentIndex || 0,
      userLikes: (progress.likes || []).length,
      viewMode: progress.viewMode || 'original',
      globalLikesTotal: Object.values(globalLikes).reduce((sum, count) => sum + count, 0),
      fragmentsWithLikes: Object.keys(globalLikes).length
    };
  });
  
  console.log(`   –ö–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${stats.userKey}`);
  console.log(`   –ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤: ${stats.totalRead}`);
  console.log(`   –¢–µ–∫—É—â–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç: ${stats.currentIndex + 1}`);
  console.log(`   –õ–∞–π–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${stats.userLikes}`);
  console.log(`   –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: ${stats.viewMode}`);
  console.log(`   –í—Å–µ–≥–æ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∞–π–∫–æ–≤: ${stats.globalLikesTotal}`);
  console.log(`   –§—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ —Å –ª–∞–π–∫–∞–º–∏: ${stats.fragmentsWithLikes}`);
  
  // –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
  await page.screenshot({ path: 'final-working-app.png', fullPage: true });
  console.log('\nüì∏ –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç: final-working-app.png');
  
  await page.waitForTimeout(3000);
  await browser.close();
  
  console.log('\n‚ú® –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
  console.log('üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é!');
}

testFullApp().catch(console.error);