import { chromium } from '@playwright/test';

async function testFixedLikes() {
  const browser = await chromium.launch({ 
    headless: false,
    args: ['--window-size=400,800']
  });
  const page = await browser.newPage({ viewport: { width: 400, height: 800 } });
  
  console.log('üîß –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–∞–π–∫–æ–≤\n');
  
  await page.goto('http://localhost:5173');
  await page.waitForTimeout(2000);
  
  // –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
  await page.click('button:has-text("–ù–∞—á–∞—Ç—å")');
  await page.waitForTimeout(1000);
  await page.locator('button').filter({ hasText: '—á—Ç–µ–Ω–∏–µ' }).click();
  await page.waitForTimeout(2000);
  
  console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ\n');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∞–π–∫–∏ –∫ —Ä–∞–∑–Ω—ã–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º
  console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º –ª–∞–π–∫–∏ –∫ 3 —Ä–∞–∑–Ω—ã–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º:\n');
  
  const likedFragments = [];
  
  for (let i = 0; i < 3; i++) {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ
    const fragmentNum = await page.locator('text=/–§—Ä–∞–≥–º–µ–Ω—Ç \\d+/').textContent();
    const text = await page.locator('.text-content').textContent();
    
    console.log(`${i + 1}. ${fragmentNum}`);
    console.log(`   "${text.substring(0, 50)}..."`);
    
    // –°—Ç–∞–≤–∏–º –ª–∞–π–∫
    await page.locator('button').filter({ has: page.locator('svg[width="24"]') }).click();
    await page.waitForTimeout(500);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω
    const isLiked = await page.locator('svg[fill="currentColor"]').count() > 0;
    const likeCount = await page.locator('button span.text-sm').textContent().catch(() => '1');
    console.log(`   ‚úÖ –õ–∞–π–∫–Ω—É—Ç–æ (${likeCount} –ª–∞–π–∫–æ–≤)\n`);
    
    likedFragments.push({
      fragment: fragmentNum,
      text: text.substring(0, 50)
    });
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –°–õ–ï–î–£–Æ–©–ï–ú–£ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—É
    if (i < 2) {
      await page.keyboard.press('ArrowUp'); // –¢–µ–ø–µ—Ä—å —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–¥–µ—Ç –≤–ø–µ—Ä–µ–¥
      await page.waitForTimeout(1000);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const favBadge = await page.locator('.absolute.-top-1.-right-1').textContent().catch(() => '0');
  console.log(`üìä –°—á–µ—Ç—á–∏–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: ${favBadge}\n`);
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  console.log('‚≠ê –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...');
  await page.locator('button').filter({ has: page.locator('svg[width="20"]') }).first().click();
  await page.waitForTimeout(1000);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  const favCount = await page.locator('.space-y-4 > div').count();
  console.log(`\nüìö –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º ${favCount} —ç–ª–µ–º–µ–Ω—Ç–æ–≤:`);
  
  for (let i = 0; i < favCount; i++) {
    const favText = await page.locator('.space-y-4 > div').nth(i).locator('.font-serif').textContent();
    console.log(`   ${i + 1}. "${favText.substring(0, 50)}..."`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è:');
  if (favCount === likedFragments.length) {
    console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!');
  } else {
    console.log(`‚ùå –ù–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –ª–∞–π–∫–Ω—É–ª–∏ ${likedFragments.length}, –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º ${favCount}`);
  }
  
  // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
  await page.screenshot({ path: 'fixed-favorites.png' });
  console.log('\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: fixed-favorites.png');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
  const storageCheck = await page.evaluate(() => {
    const key = localStorage.getItem('frankl_user_key');
    const progress = JSON.parse(localStorage.getItem(`frankl_user_progress_${key}`) || '{}');
    return {
      likes: progress.likes || [],
      currentIndex: progress.currentIndex
    };
  });
  
  console.log('\nüíæ –î–∞–Ω–Ω—ã–µ –≤ localStorage:');
  console.log(`   –õ–∞–π–∫–∏: [${storageCheck.likes.join(', ')}]`);
  console.log(`   –¢–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å: ${storageCheck.currentIndex}`);
  
  await page.waitForTimeout(3000);
  await browser.close();
  
  console.log('\n‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
  if (favCount === 3) {
    console.log('üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
  }
}

testFixedLikes().catch(console.error);