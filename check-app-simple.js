import { chromium } from '@playwright/test';

async function checkApp() {
  const browser = await chromium.launch({ headless: false });
  const page = await browser.newPage();
  
  // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  page.on('console', msg => {
    console.log(`[CONSOLE] ${msg.type()}: ${msg.text()}`);
  });
  
  // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –æ—à–∏–±–∫–∏
  page.on('pageerror', error => {
    console.error(`[ERROR]`, error.message);
  });
  
  console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
  await page.goto('http://localhost:5173');
  await page.waitForTimeout(3000);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  const welcomeButton = page.locator('text="–ù–∞—á–∞—Ç—å —á—Ç–µ–Ω–∏–µ"');
  if (await welcomeButton.isVisible()) {
    console.log('üì± –ù–∞–∂–∏–º–∞–µ–º "–ù–∞—á–∞—Ç—å —á—Ç–µ–Ω–∏–µ"...');
    await welcomeButton.click();
    await page.waitForTimeout(2000);
  }
  
  // –¢–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —á–∏—Ç–∞–ª–∫–µ
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞
  const paragraphText = await page.locator('.text-content').first().textContent().catch(() => null);
  if (paragraphText) {
    console.log('‚úÖ –¢–µ–∫—Å—Ç –≤–∏–¥–µ–Ω:', paragraphText.substring(0, 50) + '...');
  } else {
    console.log('‚ùå –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –ª–∞–π–∫–∞
  const likeButton = page.locator('button svg[width="24"][height="24"]').first();
  if (await likeButton.isVisible()) {
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞ –≤–∏–¥–Ω–∞');
    
    // –°–º–æ—Ç—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—á–µ—Ç—á–∏–∫ –ª–∞–π–∫–æ–≤
    const likesCountBefore = await page.locator('button span.text-sm').textContent().catch(() => '0');
    console.log('üìä –õ–∞–π–∫–æ–≤ –¥–æ –∫–ª–∏–∫–∞:', likesCountBefore || '0');
    
    // –ö–ª–∏–∫–∞–µ–º –ª–∞–π–∫
    await likeButton.click();
    await page.waitForTimeout(1000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞
    const likesCountAfter = await page.locator('button span.text-sm').textContent().catch(() => '0');
    console.log('üìä –õ–∞–π–∫–æ–≤ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞:', likesCountAfter || '0');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å–≤–∞–π–ø–∞–º–∏
  console.log('\nüîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é...');
  
  // –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö (—Å–ª–µ–¥—É—é—â–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç)
  await page.locator('.text-content').first().dispatchEvent('touchstart', {
    touches: [{ clientX: 200, clientY: 400 }]
  });
  await page.locator('.text-content').first().dispatchEvent('touchend', {
    changedTouches: [{ clientX: 200, clientY: 200 }]
  });
  await page.waitForTimeout(1000);
  
  const newText = await page.locator('.text-content').first().textContent().catch(() => null);
  if (newText && newText !== paragraphText) {
    console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç:', newText.substring(0, 50) + '...');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  console.log('\n‚≠ê –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...');
  const menuButton = page.locator('button').filter({ hasText: '‚Ä¢‚Ä¢‚Ä¢' });
  if (await menuButton.isVisible()) {
    await menuButton.click();
    await page.waitForTimeout(500);
    
    const favoritesButton = page.locator('text="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"');
    if (await favoritesButton.isVisible()) {
      await favoritesButton.click();
      await page.waitForTimeout(1000);
      
      const likedItems = await page.locator('.space-y-4 > div').count();
      console.log('üìö –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º:', likedItems);
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
      const closeButton = page.locator('button').filter({ hasText: '‚úï' });
      if (await closeButton.isVisible()) {
        await closeButton.click();
      }
    }
  }
  
  // –î–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
  await page.screenshot({ path: 'app-state.png', fullPage: true });
  console.log('\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ app-state.png');
  
  await page.waitForTimeout(2000);
  await browser.close();
  console.log('\n‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

checkApp().catch(console.error);