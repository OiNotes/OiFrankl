import { chromium } from '@playwright/test';

async function testLikesSync() {
  const browser = await chromium.launch({ 
    headless: false,
    args: ['--window-size=400,800']
  });
  const page = await browser.newPage({ viewport: { width: 400, height: 800 } });
  
  console.log('üîç –¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–∞–π–∫–æ–≤ –∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ\n');
  
  // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–æ–≥
  page.on('console', msg => {
    const text = msg.text();
    if (text.includes('likes') || text.includes('Liked') || text.includes('toggle')) {
      console.log(`[LOG] ${text}`);
    }
  });
  
  await page.goto('http://localhost:5173');
  await page.waitForTimeout(2000);
  
  // –ù–∞—á–∏–Ω–∞–µ–º —á—Ç–µ–Ω–∏–µ
  await page.click('button:has-text("–ù–∞—á–∞—Ç—å")');
  await page.waitForTimeout(1000);
  await page.locator('button').filter({ hasText: '—á—Ç–µ–Ω–∏–µ' }).click();
  await page.waitForTimeout(2000);
  
  console.log('üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ');
  
  // –°—á–µ—Ç—á–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
  const initialBadge = await page.locator('.absolute.-top-1.-right-1').textContent().catch(() => '0');
  console.log(`   –°—á–µ—Ç—á–∏–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ${initialBadge}`);
  
  // 2. –î–æ–±–∞–≤–ª—è–µ–º –ª–∞–π–∫–∏
  console.log('\n2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –ª–∞–π–∫–∏ –∫ 3 —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º');
  
  for (let i = 0; i < 3; i++) {
    const fragmentText = await page.locator('.text-content').textContent();
    const fragmentNum = await page.locator('text=/–§—Ä–∞–≥–º–µ–Ω—Ç \\d+/').textContent();
    
    console.log(`\n   ${fragmentNum}:`);
    console.log(`   –¢–µ–∫—Å—Ç: "${fragmentText.substring(0, 40)}..."`);
    
    // –ö–ª–∏–∫–∞–µ–º –ª–∞–π–∫
    await page.locator('button').filter({ has: page.locator('svg[width="24"]') }).click();
    await page.waitForTimeout(500);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–∞–π–∫ –ø–æ—Å—Ç–∞–≤–∏–ª—Å—è
    const isLiked = await page.locator('svg[fill="currentColor"]').count() > 0;
    console.log(`   ‚úÖ –õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω: ${isLiked}`);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
    if (i < 2) {
      await page.keyboard.press('ArrowUp');
      await page.waitForTimeout(1000);
    }
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞');
  const updatedBadge = await page.locator('.absolute.-top-1.-right-1').textContent().catch(() => '0');
  console.log(`   –°—á–µ—Ç—á–∏–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ${updatedBadge} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 3)`);
  
  // 4. –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  console.log('\n4Ô∏è‚É£ –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ');
  await page.locator('button').filter({ has: page.locator('svg[width="20"]') }).first().click();
  await page.waitForTimeout(1000);
  
  // –°—á–∏—Ç–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
  const favoritesCount = await page.locator('.space-y-4 > div').count();
  console.log(`   –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º: ${favoritesCount}`);
  
  // –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç—ã –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  if (favoritesCount > 0) {
    console.log('\n   –¢–µ–∫—Å—Ç—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º:');
    for (let i = 0; i < favoritesCount; i++) {
      const text = await page.locator('.space-y-4 > div').nth(i).locator('.font-serif').textContent();
      console.log(`   ${i + 1}. "${text.substring(0, 50)}..."`);
    }
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
  console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage');
  const storageData = await page.evaluate(() => {
    const userKey = localStorage.getItem('frankl_user_key');
    const progressKey = `frankl_user_progress_${userKey}`;
    const progress = JSON.parse(localStorage.getItem(progressKey) || '{}');
    
    return {
      userKey,
      userLikes: progress.likes || [],
      currentIndex: progress.currentIndex,
      totalRead: progress.totalRead
    };
  });
  
  console.log(`   –ö–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${storageData.userKey}`);
  console.log(`   –õ–∞–π–∫–Ω—É—Ç—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã: [${storageData.userLikes.join(', ')}]`);
  console.log(`   –¢–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å: ${storageData.currentIndex}`);
  
  // 6. –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏ —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å');
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  await page.locator('button').filter({ has: page.locator('path[d*="M15 5L5 15"]') }).click();
  await page.waitForTimeout(500);
  
  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
  await page.reload();
  await page.waitForTimeout(2000);
  
  // –°–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  await page.locator('button').filter({ has: page.locator('svg[width="20"]') }).first().click();
  await page.waitForTimeout(1000);
  
  const favoritesAfterReload = await page.locator('.space-y-4 > div').count();
  console.log(`   –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º: ${favoritesAfterReload} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
  
  // –î–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
  await page.screenshot({ path: 'test-favorites-final.png' });
  console.log('\nüì∏ –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç: test-favorites-final.png');
  
  console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
  
  if (favoritesCount === 3 && favoritesAfterReload === 3) {
    console.log('‚ú® –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
  } else {
    console.log('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π!');
    console.log(`   –û–∂–∏–¥–∞–ª–æ—Å—å: 3 —ç–ª–µ–º–µ–Ω—Ç–∞`);
    console.log(`   –ü–æ–ª—É—á–µ–Ω–æ: ${favoritesCount} ‚Üí ${favoritesAfterReload}`);
  }
  
  await browser.close();
}

testLikesSync().catch(console.error);